// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// discrepancyExact
SEXP discrepancyExact(SEXP r_points);
RcppExport SEXP _dandy_discrepancyExact(SEXP r_pointsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_points(r_pointsSEXP);
    rcpp_result_gen = Rcpp::wrap(discrepancyExact(r_points));
    return rcpp_result_gen;
END_RCPP
}
// discrepancyGWW
SEXP discrepancyGWW(SEXP r_points, SEXP r_iter, SEXP r_max_trials);
RcppExport SEXP _dandy_discrepancyGWW(SEXP r_pointsSEXP, SEXP r_iterSEXP, SEXP r_max_trialsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type r_points(r_pointsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_iter(r_iterSEXP);
    Rcpp::traits::input_parameter< SEXP >::type r_max_trials(r_max_trialsSEXP);
    rcpp_result_gen = Rcpp::wrap(discrepancyGWW(r_points, r_iter, r_max_trials));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dandy_discrepancyExact", (DL_FUNC) &_dandy_discrepancyExact, 1},
    {"_dandy_discrepancyGWW", (DL_FUNC) &_dandy_discrepancyGWW, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_dandy(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
